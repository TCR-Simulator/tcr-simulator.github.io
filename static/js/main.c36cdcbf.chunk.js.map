{"version":3,"sources":["InputAdornments.js","InformationButton.js","TcrDialog.js","TcrBar.js","BaseCard.js","SettingsFrame.js","ResultsFrame.js","App.js","serviceWorker.js","index.js"],"names":["InputAdornments","handleChange","prop","event","_this","setState","Object","defineProperty","target","value","classes","this","props","react_default","a","createElement","className","root","FormControl_default","classNames","withoutLabel","textField","Input_default","id","onChange","endAdornment","InputAdornment_default","position","inputProps","aria-label","React","Component","withStyles","theme","display","flexWrap","marginRight","marginTop","spacing","unit","flexBasis","CustomizedTooltips","content","Tooltip_default","title","getDialog","button","margin","customWidth","maxWidth","noMaxWidth","TcrDialog","open","handleClose","tcrBar","Dialog_default","onClose","aria-labelledby","dialogBox","fullWidth","DialogTitle_default","InformationButton","DialogContent_default","section","Assignment_default","subtitleIcon","Typography_default","variant","subtitle","ListItem_default","ListItem","ListItemText_default","listItemText","src_InputAdornments","AssignmentTurnedIn_default","Checkbox_default","defaultChecked","Pageview_default","DialogActions_default","Button_default","onClick","color","state","chipData","toConsumableArray","push","key","Math","floor","random","tcrDialogOpened","handleAdd","defaultProps","paddingLeft","padding","marginLeft","marginBottom","borderBottom","TcrBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","i","data","_this2","chipToDelete","indexOf","splice","alert","concat","_this3","_this4","_this5","_this$state","Paper_default","elevation","square","component","map","Chip_default","label","onDelete","handleDelete","handleClick","chip","handleAddClick","src_TcrDialog","handleTcrDialogClose","objectSpread","mixins","gutters","paddingTop","paddingBottom","BaseCard","name","handleChangeQuality","checked","handleChangeFreqSlider","frequency","handleChangeQualSlider","qualityScale","ignoreQuality","type","FormControlLabel_default","control","Slider_default","slider","_this$state2","population","Card_default","card","CardContent_default","agent","toUpperCase","container","noValidate","autoComplete","TextField_default","InputLabelProps","shrink","getBehaviorComponents","width","bullet","transform","fontSize","pos","fontWeight","agents","behaviors","acceptanceLikelihood","SettingsFrame","src_TcrBar","agentsList","List_default","src_BaseCard","ResultsFrame","createMuiTheme","palette","primary","teal","secondary","main","height","flexDirection","settingFrame","overflow","boxShadow","borderRight","zIndex","boxSizing","resultFrame","flexGrow","core_styles","AppBar_default","Toolbar_default","src_SettingsFrame","src_ResultsFrame","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c36cdcbf.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginRight: -85,\n    marginTop: -22,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing.unit * 1.5,\n  },\n  textField: {\n    flexBasis: 100,\n  },\n});\n\nclass InputAdornments extends React.Component {\n  handleChange = prop => (event) => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl\n          className={classNames(classes.withoutLabel, classes.textField)}\n        >\n          <Input\n            id=\"min-deposit\"\n            onChange={this.handleChange('minDeposit')}\n            endAdornment={<InputAdornment position=\"end\">Wei</InputAdornment>}\n            inputProps={{\n              'aria-label': 'MinDeposit',\n            }}\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line\n};\n\nexport default withStyles(styles)(InputAdornments);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  customWidth: {\n    maxWidth: 500,\n  },\n  noMaxWidth: {\n    maxWidth: 'none',\n  },\n});\n\n\nclass CustomizedTooltips extends React.Component {\n  getDialog() {\n    const { content } = this.props;\n    if (content === 'acceptanceLikelihood') {\n      return 'The probability that a maintainor will accept a submission';\n    }\n    if (content === 'submissionFreq') {\n      return 'How frequently submissions are made in a set time frame';\n    }\n    if (content === 'submissionFreq') {\n      return 'How frequently submissions are made in a set time frame';\n    }\n    if (content === 'submissionQuality') {\n      return 'The quality of the submission - i.e. submissions with higher quality are more likely to be accpted';\n    }\n    if (content === 'minimumDeposit') {\n      return 'The minimum amount a contributor must pay to contribute a submission';\n    }\n    if (content === 'TCRMech') {\n      return 'The rules for the TCR';\n    }\n    if (content === 'curation') {\n      return 'Determines if each of the maintainor will have the same voting right i.e one maintainer\\'s vote may be of greater importance than another despite having the same amount of tokens';\n    }\n    if (content === 'access') {\n      return 'Indicates if a user has to pay in order to access the list';\n    }\n    return 'ERROR';\n  }\n\n  render() {\n    return (\n      <div>\n        <Tooltip title={this.getDialog()}>\n          <i className=\"material-icons\">help</i>\n        </Tooltip>\n      </div>\n    );\n  }\n}\nCustomizedTooltips.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTooltips);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputAdornments from './InputAdornments';\nimport CustomizedTooltips from './InformationButton';\n\nconst styles = theme => ({\n  subtitle: {\n    display: 'inline',\n    paddingLeft: 6,\n    marginTop: 1,\n    position: 'absolute',\n  },\n  dialogBox: {\n    maxWidth: '80%',\n  },\n  subtitleIcon: {\n    display: 'inline',\n    padding: 3,\n  },\n  listItemText: {\n    marginLeft: 10,\n  },\n  ListItem: {\n    marginTop: 10,\n    marginBottom: 17,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  section: {\n    borderBottom: '1px solid rgb(0,0,0,.25)',\n  },\n});\n\nfunction handleAdd(tcrBar) {\n  return () => {\n    tcrBar.setState((state) => {\n      const chipData = [...state.chipData];\n      chipData.push({\n        key: Math.floor(Math.random() * 10000),\n      });\n      return { chipData };\n    });\n    tcrBar.setState({ tcrDialogOpened: false });\n  };\n}\n\nconst TcrDialog = (props) => {\n  const { classes, open, handleClose, tcrBar } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.dialogBox}\n      fullWidth\n    >\n      <DialogTitle id=\"form-dialog-title\">\nTCR Mechanism\n        <CustomizedTooltips classes=\"\" content=\"TCRMech\" />\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          <div className={classes.section}>\n            <AssignmentIcon className={classes.subtitleIcon} />\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\n              Submission\n            </Typography>\n          </div>\n          <ListItem className={classes.ListItem}>\n            <ListItemText className={classes.listItemText}>\n              Minimum Deposit\n              <CustomizedTooltips classes=\"\" content=\"minimumDeposit\" />\n            </ListItemText>\n            <div>\n              <InputAdornments />\n            </div>\n          </ListItem>\n        </div>\n        <div>\n          <div className={classes.section}>\n            <AssignmentTurnedInIcon className={classes.subtitleIcon} />\n            <Typography variant=\"subtitle1\" className={classes.subtitle} />\n          </div>\n          <ListItem className={classes.ListItem}>\n            <ListItemText className={classes.listItemText}>\n             Each maintainer holds equal voting rights.\n             Curation\n              {' '}\n              <CustomizedTooltips classes=\"\" content=\"curation\" />\n            </ListItemText>\n            <Checkbox\n              defaultChecked\n            />\n          </ListItem>\n        </div>\n        <div>\n          <div className={classes.section}>\n            <PageviewIcon className={classes.subtitleIcon} />\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\n              Subscription\n            </Typography>\n          </div>\n          <ListItem className={classes.ListItem}>\n            <ListItemText className={classes.listItemText}>\n             Consumer pays to subscribe to the list.\n              Curation\n              {' '}\n              <CustomizedTooltips classes=\"\" content=\"access\" />\n            </ListItemText>\n            <Checkbox />\n          </ListItem>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAdd(tcrBar)} color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nTcrDialog.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  tcrBar: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nTcrDialog.defaultProps = {\n  open: false,\n  handleClose: () => {},\n};\n\nexport default withStyles(styles)(TcrDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport TcrDialog from './TcrDialog';\n\nconst styles = theme => ({\n  tcrBar: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 1,\n    paddingBottom: theme.spacing.unit * 1,\n  },\n  chip: {\n    margin: theme.spacing.unit / 2,\n  },\n});\n\nclass TcrBar extends React.Component {\n  constructor(props) {\n    super(props);\n    const chipData = [];\n    for (let i = 0; i < 3; i++) {\n      chipData.push({\n        key: Math.floor(Math.random() * 10000),\n      });\n    }\n    this.state = {\n      chipData,\n      tcrDialogOpened: false,\n    };\n  }\n\n  handleDelete(data) {\n    return () => {\n      this.setState((state) => {\n        const chipData = [...state.chipData];\n        const chipToDelete = chipData.indexOf(data);\n        chipData.splice(chipToDelete, 1);\n        return { chipData };\n      });\n    };\n  }\n\n  handleClick(data) { // eslint-disable-line\n    return () => {\n      alert(`key: ${data.key}`); // eslint-disable-line no-alert\n    };\n  }\n\n  handleAddClick() {\n    return () => {\n      this.setState({ tcrDialogOpened: true });\n      // this.setState((state) => {\n      //   const chipData = [...state.chipData];\n      //   chipData.push({\n      //     key: Math.floor(Math.random() * 10000),\n      //   });\n      //   return { chipData };\n      // });\n    };\n  }\n\n  handleTcrDialogClose() {\n    return () => {\n      this.setState({ tcrDialogOpened: false });\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { chipData, tcrDialogOpened } = this.state;\n\n    return (\n      <Paper elevation={1} square className={classes.tcrBar}>\n        <Typography variant=\"h6\" component=\"h2\" color=\"secondary\">\n          TCR Mechanisms\n        </Typography>\n        {chipData.map((data, i) => (\n          <Chip\n            key={data.key}\n            label={`TCR${i + 1}`}\n            onDelete={this.handleDelete(data)}\n            onClick={this.handleClick(data)}\n            className={classes.chip}\n            color=\"primary\"\n            variant=\"outlined\"\n          />\n        ))}\n        <Chip\n          label=\"+\"\n          className={classes.chip}\n          onClick={this.handleAddClick()}\n          color=\"primary\"\n        />\n        <TcrDialog open={tcrDialogOpened} handleClose={this.handleTcrDialogClose()} tcrBar={this} />\n      </Paper>\n    );\n  }\n}\n\nTcrBar.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default withStyles(styles)(TcrBar);\n","import React from 'react';\nimport PropTypes from 'prop-types'; import Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/lab/Slider';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CustomizedTooltips from './InformationButton';\n\nconst styles = {\n  card: {\n    width: '100%',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n  agent: {\n    fontSize: '16px',\n    fontWeight: 500,\n  },\n};\n\n\nclass BaseCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      ignoreQuality: true,\n    };\n  }\n\n  getBehaviorComponents() {\n    const { classes } = this.props;\n    const { type, frequency, ignoreQuality, qualityScale } = this.state;\n    if (type === 'maintainer') {\n      return (\n        <div>\n          <FormControlLabel\n            label=\"Ignore submission quality\"\n            control=<Checkbox\n              label=\"Submission Quality\"\n              checked={ignoreQuality}\n              onChange={this.handleChangeQuality('ignoreQuality')}\n              value=\"ignoreQuality\"\n            />\n          />\n          <Typography>Acceptance Likelihood</Typography>\n          {' '}\n          <CustomizedTooltips classes=\"\" content=\"acceptanceLikelihood\" />\n          {frequency}\n          <Slider\n            className={classes.slider}\n            value={frequency}\n            onChange={this.handleChangeFreqSlider}\n          />\n        </div>\n      );\n    }\n    if (type === 'contributor') {\n      return (\n        <div>\n          <Typography>Submission Frequency</Typography>\n          <CustomizedTooltips classes=\"\" content=\"submissionFreq\" />\n          {' '}\n          {frequency}\n          <Slider\n            className={classes.slider}\n            value={frequency}\n            onChange={this.handleChangeFreqSlider}\n          />\n          <Typography>Submission Quality</Typography>\n          <CustomizedTooltips classes=\"\" content=\"submissionQuality\" />\n          {' '}\n          {qualityScale}\n          <Slider\n            className={classes.slider}\n            value={qualityScale}\n            onChange={this.handleChangeQualSlider}\n          />\n        </div>\n      );\n    }\n    return <div />;\n  }\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleChangeQuality = name => (event) => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleChangeFreqSlider = (event, value) => {\n    this.setState({ frequency: value });\n  };\n\n  handleChangeQualSlider = (event, value) => {\n    this.setState({ qualityScale: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { type, population } = this.state;\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography className={classes.agent}>\n            {type.toUpperCase()}\n          </Typography>\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard_number\"\n              label=\"Number\"\n              value={population}\n              onChange={this.handleChange('population')}\n              type=\"number\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"normal\"\n            />\n            {this.getBehaviorComponents()}\n          </form>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\n/* eslint-disable react/no-unused-prop-types */\nBaseCard.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  type: PropTypes.string.isRequired,\n  population: PropTypes.number.isRequired,\n  qualityScale: PropTypes.number,\n  acceptanceLikelihood: PropTypes.number.isRequired,\n  frequency: PropTypes.number,\n};\n\nBaseCard.defaultProps = {\n  frequency: 0,\n  qualityScale: 0,\n};\n/* eslint-enable react/no-unused-prop-types */\nexport default withStyles(styles)(BaseCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TcrBar from './TcrBar';\nimport BaseCard from './BaseCard';\n\nconst agents = [\n  {\n    type: 'maintainer',\n    population: 1,\n    behaviors: {\n      ignoreQuality: false,\n      acceptanceLikelihood: 50,\n    },\n  },\n  {\n    type: 'contributor',\n    population: 20,\n    behaviors: {\n      qualityScale: 70,\n      frequency: 15,\n    },\n  },\n  {\n    type: 'user',\n    population: 50,\n  },\n];\n\nconst styles = {\n  agentsList: {\n  },\n};\n\nconst SettingsFrame = (props) => {\n  const { classes, className } = props;\n  return (\n    <div id=\"settings\" className={className}>\n      <TcrBar />\n      <div id=\"agents-list\" className={classes.agentsList}>\n        <List component=\"nav\">\n          {agents.map(agent => (\n            <ListItem>\n              <BaseCard\n                type={agent.type}\n                population={agent.population}\n                qualityScale={agent.qualityScale}\n                frequency={agent.frequency}\n                acceptanceLikelihood={agent.acceptanceLikelihood}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n};\n\nSettingsFrame.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n};\n\nSettingsFrame.defaultProps = {\n  className: null,\n};\n\nexport default withStyles(styles)(SettingsFrame);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsFrame = (props) => {\n  const { className } = props;\n  return (\n    <div id=\"results\" className={className}>\n      <h1>Results!</h1>\n    </div>\n  );\n};\n\nResultsFrame.propTypes = {\n  className: PropTypes.string,\n};\n\nResultsFrame.defaultProps = {\n  className: null,\n};\n\nexport default ResultsFrame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport SettingsFrame from './SettingsFrame';\nimport ResultsFrame from './ResultsFrame';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n    secondary: {\n      main: '#444444',\n    },\n  },\n});\n\nconst styles = {\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    height: '100%',\n    display: 'flex',\n  },\n  settingFrame: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflow: 'auto',\n    boxShadow: '2px 0 2px rgba(0,0,0,.1)',\n    borderRight: '1px solid rgba(0,0,0,.25)',\n    zIndex: 10,\n    flexBasis: '35%',\n    boxSizing: 'border-box',\n  },\n  resultFrame: {\n    flexGrow: 1,\n    padding: '0 20px',\n  },\n\n};\n\nconst Dashboard = (props) => {\n  const { classes } = props;\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"relative\" color=\"primary\" elevation={2}>\n          <Toolbar>\n            <Typography variant=\"h5\" color=\"inherit\">\n              TCR Simulator\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div id=\"content\" className={classes.content}>\n          <SettingsFrame className={classes.settingFrame} />\n          <ResultsFrame className={classes.resultFrame} />\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default withStyles(styles)(Dashboard);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}