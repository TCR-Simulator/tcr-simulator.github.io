{"version":3,"sources":["TcrDialog.js","TcrBar.js","BaseCard.js","SettingsFrame.js","ResultsFrame.js","App.js","serviceWorker.js","index.js"],"names":["TcrDialog","props","classes","open","handleClose","react_default","a","createElement","Dialog_default","onClose","aria-labelledby","className","dialogBox","fullWidth","DialogTitle_default","id","DialogContent_default","section","Assignment_default","subtitleIcon","Typography_default","variant","subtitle","ListItem_default","ListItem","ListItemText_default","listItemText","textFieldContainer","FormControl_default","margin","InputLabel_default","htmlFor","FormLabelClasses","root","textFieldLabel","focused","textFieldFocused","Input_default","underline","textFieldUnderline","AssignmentTurnedIn_default","Checkbox_default","defaultChecked","Pageview_default","DialogActions_default","Button_default","onClick","color","defaultProps","withStyles","theme","display","paddingLeft","marginTop","position","maxWidth","padding","marginLeft","marginBottom","flexWrap","spacing","unit","&$textFieldFocused","grey","&:after","borderBottomColor","borderBottom","TcrBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chipData","i","push","key","Math","floor","random","state","tcrDialogOpened","data","_this2","setState","toConsumableArray","chipToDelete","indexOf","splice","alert","concat","_this3","_this4","_this5","_this$state","Paper_default","elevation","square","tcrBar","component","map","Chip_default","label","onDelete","handleDelete","handleClick","chip","handleAddClick","src_TcrDialog","handleTcrDialogClose","React","Component","objectSpread","mixins","gutters","paddingTop","paddingBottom","BaseCard","handleChange","name","event","defineProperty","target","value","handleChangeQuality","checked","handleChangeFreqSlider","frequency","handleChangeQualSlider","qualityScale","ignoreQuality","type","FormControlLabel_default","control","onChange","Slider_default","slider","_this$state2","population","Card_default","card","CardContent_default","container","noValidate","autoComplete","TextField_default","textField","InputLabelProps","shrink","getBehaviorComponents","width","bullet","transform","title","fontSize","pos","agents","behaviors","acceptanceLikelihood","SettingsFrame","src_TcrBar","agentsList","List_default","agent","src_BaseCard","ResultsFrame","createMuiTheme","palette","primary","teal","secondary","main","height","flexDirection","content","settingFrame","overflow","boxShadow","borderRight","zIndex","flexBasis","boxSizing","resultFrame","flexGrow","core_styles","AppBar_default","Toolbar_default","src_SettingsFrame","src_ResultsFrame","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea7c5366.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n  subtitle: {\n    display: 'inline',\n    paddingLeft: 6,\n    marginTop: 1,\n    position: 'absolute',\n  },\n  dialogBox: {\n    maxWidth: '70%',\n  },\n  subtitleIcon: {\n    display: 'inline',\n    padding: 3,\n  },\n  listItemText: {\n    marginLeft: 10,\n  },\n  ListItem: {\n    marginTop: 10,\n    marginBottom: 17,\n  },\n  textFieldContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: -22,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textFieldLabel: {\n    '&$textFieldFocused': {\n      color: grey[500],\n    },\n  },\n  textFieldFocused: {},\n  textFieldUnderline: {\n    '&:after': {\n      borderBottomColor: grey[500],\n    },\n  },\n  section: {\n    borderBottom: '1px solid rgb(0,0,0,.25)',\n  },\n});\n\nconst TcrDialog = (props) => {\n  const { classes, open, handleClose } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.dialogBox}\n      fullWidth\n    >\n      <DialogTitle id=\"form-dialog-title\">TCR Mechanism</DialogTitle>\n      <DialogContent>\n        <div>\n          <div className={classes.section}>\n            <AssignmentIcon className={classes.subtitleIcon} />\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\n              Application\n            </Typography>\n          </div>\n          <ListItem className={classes.ListItem}>\n            <ListItemText className={classes.listItemText}>\n              Minimum Deposit\n            </ListItemText>\n            <div className={classes.textFieldContainer}>\n              <FormControl className={classes.margin}>\n                <InputLabel\n                  htmlFor=\"minimum-deposit\"\n                  FormLabelClasses={{\n                    root: classes.textFieldLabel,\n                    focused: classes.textFieldFocused,\n                  }}\n                >\n                  number of wei\n                </InputLabel>\n                <Input\n                  id=\"minimum-deposit\"\n                  classes={{\n                    underline: classes.textFieldUnderline,\n                  }}\n                />\n              </FormControl>\n\n            </div>\n          </ListItem>\n        </div>\n        <div>\n          <div className={classes.section}>\n            <AssignmentTurnedInIcon className={classes.subtitleIcon} />\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\n              Curation\n            </Typography>\n          </div>\n          <ListItem className={classes.ListItem}>\n            <ListItemText className={classes.listItemText}>\n             Each maintainer holds equal voting rights.\n            </ListItemText>\n            <Checkbox\n              defaultChecked\n            />\n          </ListItem>\n        </div>\n        <div>\n          <div className={classes.section}>\n            <PageviewIcon className={classes.subtitleIcon} />\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\n              Access\n            </Typography>\n          </div>\n          <ListItem className={classes.ListItem}>\n            <ListItemText className={classes.listItemText}>\n             Consumer pays per access.\n            </ListItemText>\n            <Checkbox />\n          </ListItem>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nTcrDialog.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nTcrDialog.defaultProps = {\n  open: false,\n  handleClose: () => {},\n};\n\nexport default withStyles(styles)(TcrDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport TcrDialog from './TcrDialog';\n\nconst styles = theme => ({\n  tcrBar: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 1,\n    paddingBottom: theme.spacing.unit * 1,\n  },\n  chip: {\n    margin: theme.spacing.unit / 2,\n  },\n});\n\nclass TcrBar extends React.Component {\n  constructor(props) {\n    super(props);\n    const chipData = [];\n    for (let i = 0; i < 3; i++) {\n      chipData.push({\n        key: Math.floor(Math.random() * 10000),\n      });\n    }\n    this.state = {\n      chipData,\n      tcrDialogOpened: false,\n    };\n  }\n\n  handleDelete(data) {\n    return () => {\n      this.setState((state) => {\n        const chipData = [...state.chipData];\n        const chipToDelete = chipData.indexOf(data);\n        chipData.splice(chipToDelete, 1);\n        return { chipData };\n      });\n    };\n  }\n\n  handleClick(data) { // eslint-disable-line\n    return () => {\n      alert(`key: ${data.key}`); // eslint-disable-line no-alert\n    };\n  }\n\n  handleAddClick() {\n    return () => {\n      this.setState({ tcrDialogOpened: true });\n      // this.setState((state) => {\n      //   const chipData = [...state.chipData];\n      //   chipData.push({\n      //     key: Math.floor(Math.random() * 10000),\n      //   });\n      //   return { chipData };\n      // });\n    };\n  }\n\n  handleTcrDialogClose() {\n    return () => {\n      this.setState({ tcrDialogOpened: false });\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { chipData, tcrDialogOpened } = this.state;\n\n    return (\n      <Paper elevation={1} square className={classes.tcrBar}>\n        <Typography variant=\"h6\" component=\"h2\" color=\"secondary\">\n          TCR Mechanisms\n        </Typography>\n        {chipData.map((data, i) => (\n          <Chip\n            key={data.key}\n            label={`TCR${i + 1}`}\n            onDelete={this.handleDelete(data)}\n            onClick={this.handleClick(data)}\n            className={classes.chip}\n            color=\"primary\"\n            variant=\"outlined\"\n          />\n        ))}\n        <Chip\n          label=\"+\"\n          className={classes.chip}\n          onClick={this.handleAddClick()}\n          color=\"primary\"\n        />\n        <TcrDialog open={tcrDialogOpened} handleClose={this.handleTcrDialogClose()} />\n      </Paper>\n    );\n  }\n}\n\nTcrBar.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default withStyles(styles)(TcrBar);\n","import React from 'react';\nimport PropTypes from 'prop-types'; import Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/lab/Slider';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst styles = {\n  card: {\n    width: '100%',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n};\n\nclass BaseCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      ignoreQuality: true,\n    };\n  }\n\n  getBehaviorComponents() {\n    const { classes } = this.props;\n    const { type, frequency, ignoreQuality, qualityScale } = this.state;\n    if (type === 'maintainer') {\n      return (\n        <div>\n          <FormControlLabel\n            label=\"Ignore submission quality\"\n            control=<Checkbox\n              label=\"Submission Quality\"\n              checked={ignoreQuality}\n              onChange={this.handleChangeQuality('ignoreQuality')}\n              value=\"ignoreQuality\"\n            />\n          />\n          <Typography>Frequency</Typography>\n          <Slider\n            className={classes.slider}\n            value={frequency}\n            onChange={this.handleChangeFreqSlider}\n          />\n        </div>\n      );\n    }\n    if (type === 'contributor') {\n      return (\n        <div>\n          <Typography>Frequency</Typography>\n          <Slider\n            className={classes.slider}\n            value={frequency}\n            onChange={this.handleChangeFreqSlider}\n          />\n          <Typography>Quality</Typography>\n          <Slider\n            className={classes.slider}\n            value={qualityScale}\n            onChange={this.handleChangeQualSlider}\n          />\n        </div>\n      );\n    }\n    return <div />;\n  }\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleChangeQuality = name => (event) => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleChangeFreqSlider = (event, value) => {\n    this.setState({ frequency: value });\n  };\n\n  handleChangeQualSlider = (event, value) => {\n    this.setState({ qualityScale: value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { type, population } = this.state;\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography>\n            {type}\n          </Typography>\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard_number\"\n              label=\"Number\"\n              value={population}\n              onChange={this.handleChange('population')}\n              type=\"number\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"normal\"\n            />\n            {this.getBehaviorComponents()}\n          </form>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\n/* eslint-disable react/no-unused-prop-types */\nBaseCard.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  type: PropTypes.string.isRequired,\n  population: PropTypes.number.isRequired,\n  qualityScale: PropTypes.number.isRequired,\n  acceptanceLikelihood: PropTypes.number.isRequired,\n  frequency: PropTypes.number.isRequired,\n};\n/* eslint-enable react/no-unused-prop-types */\n\nexport default withStyles(styles)(BaseCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TcrBar from './TcrBar';\nimport BaseCard from './BaseCard';\n\nconst agents = [\n  {\n    type: 'maintainer',\n    population: 1,\n    behaviors: {\n      ignoreQuality: false,\n      acceptanceLikelihood: 50,\n    },\n  },\n  {\n    type: 'contributor',\n    population: 20,\n    behaviors: {\n      qualityScale: 70,\n      frequency: 15,\n    },\n  },\n  {\n    type: 'user',\n    population: 50,\n  },\n];\n\nconst styles = {\n  agentsList: {\n  },\n};\n\nconst SettingsFrame = (props) => {\n  const { classes, className } = props;\n  return (\n    <div id=\"settings\" className={className}>\n      <TcrBar />\n      <div id=\"agents-list\" className={classes.agentsList}>\n        <List component=\"nav\">\n          {agents.map(agent => (\n            <ListItem>\n              <BaseCard\n                type={agent.type}\n                population={agent.population}\n                qualityScale={agent.qualityScale}\n                frequency={agent.frequency}\n                acceptanceLikelihood={agent.acceptanceLikelihood}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n};\n\nSettingsFrame.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n};\n\nSettingsFrame.defaultProps = {\n  className: null,\n};\n\nexport default withStyles(styles)(SettingsFrame);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsFrame = (props) => {\n  const { className } = props;\n  return (\n    <div id=\"results\" className={className}>\n      <h1>Results!</h1>\n    </div>\n  );\n};\n\nResultsFrame.propTypes = {\n  className: PropTypes.string,\n};\n\nResultsFrame.defaultProps = {\n  className: null,\n};\n\nexport default ResultsFrame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport SettingsFrame from './SettingsFrame';\nimport ResultsFrame from './ResultsFrame';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n    secondary: {\n      main: '#444444',\n    },\n  },\n});\n\nconst styles = {\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    height: '100%',\n    display: 'flex',\n  },\n  settingFrame: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflow: 'auto',\n    boxShadow: '2px 0 2px rgba(0,0,0,.1)',\n    borderRight: '1px solid rgba(0,0,0,.25)',\n    zIndex: 10,\n    flexBasis: '35%',\n    boxSizing: 'border-box',\n  },\n  resultFrame: {\n    flexGrow: 1,\n    padding: '0 20px',\n  },\n\n};\n\nconst Dashboard = (props) => {\n  const { classes } = props;\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"relative\" color=\"primary\" elevation={2}>\n          <Toolbar>\n            <Typography variant=\"h5\" color=\"inherit\">\n              TCR Simulator\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div id=\"content\" className={classes.content}>\n          <SettingsFrame className={classes.settingFrame} />\n          <ResultsFrame className={classes.resultFrame} />\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default withStyles(styles)(Dashboard);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}